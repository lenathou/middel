<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="210mm"
   height="297mm"
   viewBox="0 0 210 297"
   version="1.1"
   id="svg1"
   xml:space="preserve"
   inkscape:version="1.3 (0e150ed6c4, 2023-07-21)"
   sodipodi:docname="goldenlogo.svg"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#999999"
     borderopacity="1"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     inkscape:zoom="0.97904742"
     inkscape:cx="396.81428"
     inkscape:cy="561.25984"
     inkscape:window-width="2560"
     inkscape:window-height="1334"
     inkscape:window-x="-11"
     inkscape:window-y="-11"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" /><defs
     id="defs1"><linearGradient
       id="linearGradient2"
       inkscape:collect="always"><stop
         style="stop-color:#ffd700;stop-opacity:0.85178238;"
         offset="0"
         id="stop2" /><stop
         style="stop-color:#b8860b;stop-opacity:0.72420263;"
         offset="1"
         id="stop3" /></linearGradient><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient2"
       id="linearGradient3"
       x1="2380"
       y1="5111.0059"
       x2="7868.3818"
       y2="5111.0059"
       gradientUnits="userSpaceOnUse" /></defs><g
     inkscape:label="Calque 1"
     inkscape:groupmode="layer"
     id="layer1"><g
       transform="matrix(0.03527778,0,0,-0.03527778,-75.779636,328.80493)"
       fill="#000000"
       stroke="none"
       id="g7"
       style="fill:url(#linearGradient3);opacity:0.99999999;fill-opacity:1"><path
         d="m 5057,9040 c -14,-11 -42,-51 -63,-88 -189,-340 -596,-682 -1034,-870 -371,-159 -729,-222 -1266,-222 -281,0 -283,0 -298,-22 -14,-20 -16,-167 -16,-1373 0,-840 4,-1393 10,-1465 37,-410 157,-799 357,-1151 165,-291 297,-466 527,-695 244,-242 451,-400 771,-589 83,-48 204,-119 270,-158 369,-216 618,-422 757,-626 l 57,-83 47,73 c 56,89 231,266 364,368 126,97 264,187 560,364 449,268 616,392 870,646 258,258 440,507 594,810 125,246 188,426 252,723 49,229 47,147 51,1692 3,1319 2,1450 -12,1466 -15,16 -47,18 -358,23 -454,6 -664,37 -985,143 -504,165 -963,493 -1200,855 -32,48 -68,106 -82,129 -41,69 -120,92 -173,50 z m 299,-690 c 526,-503 1205,-774 1994,-796 107,-3 201,-7 208,-10 10,-3 12,-256 9,-1301 -1,-714 -6,-1314 -10,-1333 -4,-19 -15,-80 -23,-135 -59,-367 -224,-735 -489,-1093 -91,-123 -386,-424 -515,-526 -135,-107 -353,-250 -655,-431 -386,-231 -545,-345 -694,-499 l -55,-55 -90,87 c -168,161 -323,271 -701,492 -362,212 -559,350 -762,532 -350,315 -626,722 -762,1125 -51,148 -96,352 -111,492 -6,66 -10,560 -10,1376 v 1272 l 208,6 c 815,25 1536,320 2033,833 52,55 117,127 143,161 l 48,62 72,-87 c 40,-48 113,-125 162,-172 z"
         id="path1"
         style="fill:url(#linearGradient3);fill-opacity:1" /><path
         d="M 5056,8114 C 4829,7866 4386,7591 3955,7430 3635,7311 3383,7259 3108,7257 l -148,-2 V 6124 c 0,-1073 1,-1135 19,-1235 41,-224 99,-402 192,-599 118,-246 251,-438 438,-632 203,-211 407,-360 811,-591 365,-209 498,-298 636,-429 l 71,-68 79,77 c 132,128 262,216 629,425 396,226 541,328 745,525 336,323 551,699 658,1148 61,253 61,263 62,1358 0,549 -3,1034 -6,1078 l -7,80 -26,-6 c -43,-9 -334,14 -449,36 -589,112 -1226,430 -1583,789 l -106,107 z m 100,-325 c 37,-41 186,-151 324,-240 452,-291 1028,-504 1493,-554 l 57,-6 v -937 c 0,-1013 -3,-1086 -54,-1282 -35,-136 -69,-227 -141,-377 -109,-228 -228,-393 -420,-585 -189,-189 -324,-286 -710,-508 -265,-152 -394,-233 -498,-311 -43,-33 -81,-59 -84,-59 -3,0 -35,23 -70,51 -93,73 -295,202 -458,294 -461,257 -715,452 -923,707 -226,278 -383,626 -431,958 -10,67 -20,2034 -11,2043 3,3 46,11 95,17 561,70 1263,374 1720,744 44,35 83,65 86,65 3,1 14,-8 25,-20 z"
         id="path2"
         style="fill:url(#linearGradient3);fill-opacity:1" /><path
         d="m 4892,6963 c -19,-9 -36,-22 -39,-30 -3,-7 -9,-10 -15,-7 -5,3 -15,-2 -22,-12 -9,-11 -15,-13 -20,-6 -4,6 -14,8 -23,5 -9,-4 -21,1 -29,12 -11,15 -17,16 -26,7 -7,-7 -23,-12 -36,-12 -15,0 -26,-7 -29,-20 -3,-11 -12,-20 -19,-20 -8,0 -14,-6 -14,-14 0,-11 -10,-14 -34,-13 -19,2 -38,6 -42,10 -20,20 -65,-11 -93,-64 -13,-24 -25,-33 -47,-34 -16,-1 -34,2 -41,7 -14,11 -53,-7 -53,-25 0,-7 -9,-30 -20,-52 -19,-36 -24,-40 -63,-40 -53,-1 -70,-11 -64,-37 3,-11 -3,-35 -14,-54 -10,-19 -20,-37 -21,-42 -2,-4 -10,-6 -18,-5 -8,1 -27,-7 -42,-18 -24,-18 -26,-23 -15,-41 8,-14 9,-22 1,-24 -5,-3 -9,-22 -8,-44 1,-26 -2,-40 -10,-40 -7,0 -24,-13 -39,-28 -24,-25 -26,-30 -13,-48 10,-13 11,-23 4,-31 -7,-9 -7,-13 0,-13 15,0 9,-53 -8,-67 -8,-7 -11,-13 -7,-13 5,0 -1,-12 -12,-27 -18,-22 -19,-29 -8,-42 7,-9 19,-29 27,-46 8,-16 19,-33 24,-37 6,-4 5,-12 -2,-21 -7,-8 -12,-19 -10,-23 1,-5 -3,-19 -10,-31 -11,-20 -10,-24 8,-35 25,-15 51,-69 75,-153 24,-85 91,-224 162,-335 130,-205 157,-283 156,-450 -1,-135 -17,-221 -68,-350 -20,-52 -39,-102 -41,-111 -4,-12 68,-63 295,-210 166,-107 378,-245 472,-306 94,-62 174,-113 178,-113 4,0 22,36 40,80 36,90 111,209 171,274 38,42 42,51 57,143 9,54 19,102 23,106 4,5 16,4 26,-1 115,-62 313,-122 399,-122 60,0 147,24 176,48 36,30 62,102 64,175 1,37 -1,67 -5,67 -3,0 -12,21 -19,47 -6,26 -18,55 -26,63 -8,8 -19,35 -26,60 -12,45 -12,45 25,82 41,41 46,77 17,122 -19,29 -19,29 0,55 11,15 22,50 26,79 6,56 -4,77 -44,93 -13,5 -28,21 -34,36 -9,23 -7,30 8,38 42,23 93,83 93,109 0,37 -11,55 -101,173 -78,101 -91,127 -66,136 7,3 6,6 -5,6 -29,2 -30,18 -3,70 14,28 25,67 25,88 0,25 -31,110 -91,252 l -92,216 6,112 c 5,83 3,113 -6,116 -9,3 -9,7 1,20 11,13 9,19 -10,37 -15,14 -30,19 -45,15 -18,-4 -23,-1 -23,15 0,11 -5,20 -11,20 -6,0 -9,7 -5,15 3,8 -2,19 -11,23 -10,6 -14,16 -10,26 9,22 -42,48 -66,35 -12,-7 -17,-6 -17,2 0,7 -9,9 -21,6 -15,-4 -23,0 -26,14 -3,10 -11,19 -18,19 -7,0 -15,9 -18,20 -3,12 -14,20 -27,20 -13,0 -28,8 -35,17 -10,13 -16,15 -26,6 -19,-15 -70,-13 -76,3 -3,8 -14,14 -24,14 -10,0 -19,6 -19,13 0,6 -17,17 -37,24 -32,10 -39,9 -49,-5 -7,-9 -16,-14 -20,-10 -4,4 -14,2 -22,-5 -12,-9 -16,-9 -19,1 -3,6 -13,12 -24,12 -10,0 -19,7 -19,15 0,25 -109,25 -123,-1 -4,-8 -13,-11 -19,-8 -6,4 -14,1 -18,-7 -7,-10 -11,-10 -24,0 -8,7 -20,10 -26,6 -6,-4 -18,3 -28,14 -16,20 -18,20 -50,4 z m 900,-610 c 10,-10 4,-13 -26,-13 -27,0 -37,-4 -33,-12 3,-7 37,-88 76,-180 39,-92 71,-173 71,-181 0,-32 -24,-34 -164,-16 -124,16 -143,16 -168,3 -30,-15 -216,-173 -256,-216 l -23,-25 93,-8 c 210,-16 307,-41 216,-55 -59,-9 -12,-22 70,-19 42,2 82,0 89,-4 7,-4 39,20 80,63 40,40 77,70 88,70 13,0 33,-20 57,-59 21,-32 67,-100 104,-150 36,-51 63,-99 60,-106 -3,-8 -24,-19 -48,-25 -24,-6 -73,-20 -110,-31 -38,-11 -71,-20 -75,-20 -5,0 -10,15 -13,33 l -6,33 -17,-32 c -19,-36 -15,-74 10,-95 9,-7 45,-17 82,-23 48,-8 67,-16 69,-28 2,-10 -3,-17 -11,-17 -9,0 -61,-23 -116,-51 -96,-48 -155,-93 -194,-149 l -17,-25 6,35 c 4,19 12,47 20,61 12,25 11,30 -15,65 -48,66 -183,187 -261,235 -41,25 -129,75 -194,110 -80,42 -140,83 -180,121 -33,32 -62,58 -63,58 -1,0 -12,-28 -25,-62 -22,-60 -23,-61 -26,-30 -11,116 134,311 292,393 36,19 66,40 66,47 0,7 -7,26 -15,42 -15,28 -19,30 -79,30 -82,0 -265,-33 -394,-72 -109,-32 -146,-32 -71,0 122,53 313,103 447,118 34,3 62,8 62,9 0,1 -11,28 -25,59 -14,31 -25,61 -25,67 0,17 86,40 235,62 67,11 344,2 357,-10 z m -757,-13 c -3,-5 -20,-10 -37,-10 -49,0 -236,-30 -323,-51 -195,-49 -344,-110 -461,-189 -40,-28 -77,-50 -81,-50 -17,0 77,85 141,128 92,61 218,114 346,145 133,33 139,34 293,36 83,0 126,-3 122,-9 z m -390,-584 c 55,-25 119,-90 141,-141 12,-30 30,-146 49,-323 l 7,-62 -38,-16 c -53,-22 -112,-13 -204,33 -147,71 -240,199 -240,329 0,165 135,250 285,180 z m 984,20 c -8,-8 -109,-46 -109,-41 0,12 67,45 89,45 13,0 22,-2 20,-4 z m 510,-582 c 2,-2 -1,-10 -8,-18 -8,-9 -24,-12 -49,-9 -30,4 -58,-6 -146,-47 -60,-28 -111,-49 -113,-46 -8,7 60,54 142,96 71,36 85,40 125,35 25,-4 47,-9 49,-11 z m -57,-174 c 57,-44 37,-90 -40,-89 -58,0 -214,40 -219,55 -7,21 97,51 183,53 37,1 58,-4 76,-19 z M 4733,4743 c 51,-155 90,-353 74,-369 -7,-8 -48,129 -101,340 -40,159 -45,196 -31,196 2,0 28,-75 58,-167 z"
         id="path3"
         style="fill:url(#linearGradient3);fill-opacity:1" /><path
         d="m 4460,5683 c -38,-34 -52,-89 -40,-155 16,-82 65,-153 136,-194 59,-35 65,-26 10,13 -120,85 -135,254 -25,278 34,8 58,-3 38,-16 -9,-6 -1,-9 24,-9 46,0 48,-12 5,-31 -45,-19 -73,-76 -58,-115 18,-46 39,-63 99,-81 31,-8 67,-24 80,-34 13,-11 34,-19 48,-19 20,0 23,3 17,28 -13,50 -22,67 -57,103 -34,35 -35,37 -24,82 8,39 7,50 -9,79 -11,18 -41,48 -68,66 -65,43 -131,45 -176,5 z"
         id="path4"
         style="fill:url(#linearGradient3);fill-opacity:1" /><path
         d="m 2780,3154 c -83,-36 -128,-112 -110,-188 25,-110 136,-166 223,-114 22,13 46,37 55,53 10,17 18,32 19,34 2,2 28,-13 58,-34 33,-23 85,-75 127,-129 226,-288 456,-459 966,-720 360,-183 471,-255 602,-386 110,-110 186,-219 258,-370 58,-123 87,-147 162,-137 58,7 84,35 142,152 177,351 340,491 903,772 306,153 454,243 606,369 91,75 224,215 281,293 69,95 173,191 206,191 5,0 15,-14 22,-30 14,-34 53,-65 92,-75 39,-10 108,13 144,49 68,68 66,165 -6,229 -67,62 -135,68 -258,26 -117,-40 -177,-90 -317,-264 -230,-284 -391,-408 -802,-613 -378,-190 -538,-286 -677,-407 -101,-88 -218,-229 -281,-339 -28,-48 -55,-94 -61,-103 -9,-13 -18,-3 -51,58 -124,224 -296,403 -525,545 -51,31 -212,117 -358,190 -491,246 -669,378 -922,685 -135,163 -206,217 -342,258 -80,25 -109,26 -156,5 z"
         id="path5"
         style="fill:url(#linearGradient3);fill-opacity:1" /><path
         d="m 4388,1711 c -27,-24 -33,-36 -33,-70 0,-104 142,-143 190,-51 29,56 16,109 -35,135 -45,23 -85,19 -122,-14 z"
         id="path6"
         style="fill:url(#linearGradient3);fill-opacity:1" /><path
         d="m 5745,1728 c -94,-51 -61,-188 45,-188 103,0 141,138 50,185 -34,18 -67,19 -95,3 z"
         id="path7"
         style="fill:url(#linearGradient3);fill-opacity:1" /></g></g><script
     id="mesh_polyfill"
     type="text/javascript">&#10;!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();&#10;</script></svg>
